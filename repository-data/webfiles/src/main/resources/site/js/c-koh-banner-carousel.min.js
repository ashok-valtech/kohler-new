/*
 * Copyright Â© 2000-2017 Kohler Company. All Rights Reserved.
 */
var axKOH=axKOH||{},mobileScreenWidth=980,smallScreenWidth=768;axKOH.main=axKOH.main||{},axKOH.main.carouselManager=function(){var initCarousel=function(){var slidesToShow,$components=$(".c-koh-banner-carousel");$components.each(function(componentIndex,element){var isthumbnail=$(element).hasClass("koh-banner-thumbnail-comp"),isHero=$(element).hasClass("v-koh-hero"),isArticle=$(element).hasClass("v-koh-article"),isThumbnailRequired=!1;isthumbnail&&(isThumbnailRequired=!0);var $carousels=$(this).children(".koh-carousel");$carousels.each(function(carouselIndex,ele){var sliderIdName="slider_"+componentIndex,sliderNavIdName="sliderNav_"+componentIndex,$carousel=$(this);$carousel.find(".koh-thumbnail-slide-collection").attr("id",sliderIdName),$carousel.find(".koh-thumbnail-slide-navigation").attr("id",sliderNavIdName);var sliderId="#"+sliderIdName,sliderNavId="#"+sliderNavIdName,$carouselControls=$('<div class="koh-carousel-controls"></div>');$carousel.prepend($carouselControls);var $movePrevious=$('<button class="koh-carousel-control previous"><span class="icon"></span><span class="label">Previous</span></button>'),$moveNext=$('<button class="koh-carousel-control next"><span class="icon"></span><span class="label">Next</span></button>');$carouselControls.append($movePrevious),$carouselControls.append($moveNext);var $slideCollection=$carousel.find(".koh-slide-collection"),slideCount=$slideCollection.find(".koh-banner-slide").length;slidesToShow=6>slideCount?2>slideCount?1:slideCount-1:5;var $firstSlide=$slideCollection.find(".koh-banner-slide").first();$slideCollection.each(function(){initSlides($(this),componentIndex+carouselIndex)});var config={autoplay:!1,autoplaySpeed:5e3,adaptiveHeight:!0,dots:!0,dotsClass:"koh-carousel-indicators",arrows:!0,appendArrows:$carouselControls,appendDots:$carouselControls,prevArrow:$movePrevious,nextArrow:$moveNext,pauseOnHover:!0,pauseOnDotsHover:!0,mobileFirst:!0};if($(window).width()<smallScreenWidth){var mobileConfig={draggable:!0,fade:!0,speed:900,infinite:!0,cssEase:"cubic-bezier(0.7, 0, 0.3, 1)",touchThreshold:100};config=Object.assign(config,mobileConfig)}isThumbnailRequired&&(config.asNavFor=sliderNavId,config.fade=!0),isHero&&(config.autoplay=!0),isArticle&&(config.dotsClass="koh-article-carousel-indicators",config.autoplay=!0),$slideCollection.slick(config).on("afterChange",function(event,slick,slideIndex){var $slide=$(slick.$slides.get(slideIndex));repositionControlsHeroBanner($carouselControls,$slide)}),isThumbnailRequired&&$(sliderNavId).slick({asNavFor:sliderId,slidesToShow:Math.min(5,slidesToShow),slidesToScroll:1,arrows:!1,focusOnSelect:!0,centerMode:!0,variableWidth:!0,responsive:[{breakpoint:550,settings:{slidesToShow:Math.min(3,slidesToShow)}}],responsive:[{breakpoint:480,settings:{slidesToShow:Math.min(2,slidesToShow)}}]});var slick=$slideCollection.slick("getSlick");if(slick){var $indicators=slick.$dots;$indicators&&$indicators.on("click","li",function(){var slick=$slideCollection.slick("getSlick");slick&&(slick.slickSetOption("autoplay",!1,!1),slick.autoPlay=$.noop)})}$(window).load(function(){repositionControlsHeroBanner($carouselControls,$firstSlide)}),$(window).resize(function(){waitForFinalEvent(function(){repositionControlsHeroBanner($carouselControls,$firstSlide)},100,"carouselTimer"+componentIndex+carouselIndex)})})})},initShoppingGuideCarousel=function(){var slidesToShow,$components=$(".c-koh-shopping-guide-carousel");$components.each(function(componentIndex,element){var isthumbnail=$(element).hasClass("koh-banner-thumbnail-comp"),isHero=$(element).hasClass("v-koh-hero"),isArticle=$(element).hasClass("v-koh-article"),isThumbnailRequired=!1;isthumbnail&&(isThumbnailRequired=!0);var $carousels=$(this).children(".koh-carousel");$carousels.each(function(carouselIndex,ele){var sliderIdName="slider_"+componentIndex,sliderNavIdName="sliderNav_"+componentIndex,$carousel=$(this);$carousel.find(".koh-thumbnail-slide-collection").attr("id",sliderIdName),$carousel.find(".koh-thumbnail-slide-navigation").attr("id",sliderNavIdName);var sliderId="#"+sliderIdName,sliderNavId="#"+sliderNavIdName,$carouselControls=$('<div class="koh-carousel-controls"></div>');$carousel.prepend($carouselControls);var $movePrevious=$('<button class="koh-carousel-control previous"><span class="icon"></span><span class="label">Previous</span></button>'),$moveNext=$('<button class="koh-carousel-control next"><span class="icon"></span><span class="label">Next</span></button>');$carouselControls.append($movePrevious),$carouselControls.append($moveNext);var $slideCollection=$carousel.find(".koh-slide-collection"),slideCount=$slideCollection.find(".koh-banner-slide").length;slidesToShow=6>slideCount?2>slideCount?1:slideCount-1:5;var $firstSlide=$slideCollection.find(".koh-banner-slide").first();$slideCollection.each(function(){initSlides($(this),componentIndex+carouselIndex)});var config={autoplay:!1,autoplaySpeed:5e3,adaptiveHeight:!0,dots:!0,dotsClass:"koh-carousel-indicators",arrows:!0,appendArrows:$carouselControls,appendDots:$carouselControls,prevArrow:$movePrevious,nextArrow:$moveNext,pauseOnHover:!0,pauseOnDotsHover:!0,mobileFirst:!0};isThumbnailRequired&&(config.autoplay=!0,config.asNavFor=sliderNavId,config.fade=!0),isHero&&(config.autoplay=!0),isArticle&&(config.autoplay=!0,config.autoplaySpeed=3e3),$slideCollection.slick(config).on("afterChange",function(event,slick,slideIndex){var $slide=$(slick.$slides.get(slideIndex));repositionControlsShoppingGuide($carouselControls,$slide)}),isThumbnailRequired&&$(sliderNavId).slick({asNavFor:sliderId,slidesToShow:Math.min(5,slidesToShow),slidesToScroll:1,arrows:!1,focusOnSelect:!0,centerMode:!0,variableWidth:!0,responsive:[{breakpoint:550,settings:{slidesToShow:Math.min(3,slidesToShow)}}],responsive:[{breakpoint:480,settings:{slidesToShow:Math.min(2,slidesToShow)}}]});var slick=$slideCollection.slick("getSlick");if(slick){var $indicators=slick.$dots;$indicators&&$indicators.on("click","li",function(){var slick=$slideCollection.slick("getSlick");slick&&(slick.slickSetOption("autoplay",!1,!1),slick.autoPlay=$.noop)})}$(window).load(function(){repositionControlsShoppingGuide($carouselControls,$firstSlide)}),$(window).resize(function(){waitForFinalEvent(function(){repositionControlsShoppingGuide($carouselControls,$firstSlide)},100,"carouselTimer"+componentIndex+carouselIndex)})})})},repositionControlsHeroBanner=function($controlsContainer,$referenceSlide){var bgWidth="",bgHeight="",$bannerBg=$(window).width()<smallScreenWidth?$referenceSlide.children(".koh-banner-background-mobile").first():$referenceSlide.children(".koh-banner-background").first();$bannerBg?(bgWidth=$bannerBg.width(),bgHeight=$bannerBg.height()):(bgWidth=$referenceSlide.width(),bgHeight=$referenceSlide.height()),$controlsContainer.width(bgWidth).height(bgHeight)},repositionControlsShoppingGuide=function($controlsContainer,$referenceSlide){var bgWidth="",bgHeight="",$bannerBg=$referenceSlide.children(".koh-banner-background").first();$bannerBg?(bgWidth=$bannerBg.width(),bgHeight=$bannerBg.height()):(bgWidth=$referenceSlide.width(),bgHeight=$referenceSlide.height()),$controlsContainer.width(bgWidth).height(bgHeight)},initSlides=function($slideCollection,containerID){var $slides=$slideCollection.children(".koh-banner-slide");$slides.each(function(slideIndex){var $slide=$(this),$overlayBookmark=$slide.find(".koh-overlay-bookmark"),$overlayBookmarkButton=$overlayBookmark.children(".koh-overlay-bookmark-button"),$overlayBookmarkPanel=$overlayBookmark.children(".koh-overlay-bookmark-form");initOverlayPopover($slide,$overlayBookmarkButton,$overlayBookmarkPanel,"bookmarkPopover"+containerID+slideIndex);var $overlayShare=$slide.find(".koh-overlay-social"),$overlayShareButton=$overlayShare.children(".koh-overlay-share-button"),$overlaySharePanel=$overlayShare.children(".koh-overlay-share-menu");if(axKOH&&axKOH.utils&&axKOH.utils.socialShare&&axKOH.utils.socialShare.initAsTooltip($slide,$overlayShareButton,$overlaySharePanel,"sharePopover"+containerID+slideIndex,"koh-carousel-popover"),$slide.hasClass("v-koh-hotspot")){var $hotspotsContainer=$slide.children(".koh-banner-hotspots").first(),$hotspotHeader=$hotspotsContainer.children(".koh-banner-hotspots-header");$hotspotHeader.click({target:$hotspotsContainer,slideCollection:$slideCollection},function(e){toggleOpen(e.data.target);var $slideSet=e.data.slideCollection,$activeSlide=$slideSet.find(".slick-active");$slideSet.children(".slick-list").height($activeSlide.height())});var $hotspots=$hotspotsContainer.children(".koh-banner-hotspots-collection").children(".koh-banner-hotspot");$hotspots.each(function(hotspotIndex){var $hotspot=$(this),$hotspotButton=$hotspot.children(".koh-banner-hotspot-icon"),$hotspotPanel=$hotspot.children(".koh-banner-hotspot-tile"),tipID="hotspotPopover"+containerID+slideIndex+hotspotIndex;initOverlayHotspot($slide,$hotspotButton,$hotspotPanel,tipID),$(window).resize(function(){waitForFinalEvent(function(){initOverlayHotspot($slide,$hotspotButton,$hotspotPanel,tipID)},100,"carouselTimer"+tipID)})})}if($slide.hasClass("v-koh-video")){var $backgroundLink=$slide.children(".koh-banner-background").children("a"),$videoPanel=$slide.children(".koh-banner-video-panel");initAsModal($backgroundLink,$videoPanel,"CarouselVideo"+containerID+slideIndex),$videoPanel.on("opened",function(){var $embeddedVideo=$(this).find("iframe");resizeResponsiveVideo($embeddedVideo)})}var $bannerBackground=$slide.children(".koh-banner-background"),$bannerContent=$slide.children(".koh-banner-content"),url=new URL(window.location.href),path=url.pathname;("/"===path||"/en"===path)&&$(window).width()<smallScreenWidth&&($(".v-koh-hero").find(".koh-banner-title").hide(),$(".v-koh-hero").find(".koh-banner-summary").hide()),$bannerContent.click({background:$bannerBackground},function(e){var $bannerContent=$(this),$bannerBackground=e.data.background;if($bannerContent.offset().top===$bannerBackground.offset().top&&$bannerContent.offset().left===$bannerBackground.offset().left&&$bannerContent.outerWidth()===$bannerBackground.outerWidth()&&$bannerContent.outerHeight()===$bannerBackground.outerHeight()){var $links=$bannerBackground.children("a").first();$links.length&&$links[0].click()}})})},initOverlayPopover=function($slide,$button,$content,tooltipID){$button.qtip({id:tooltipID,content:{text:$content},position:{my:"bottom right",at:"center center",container:$slide,viewport:!0},hide:{when:{event:"mouseout unfocus"},fixed:!0,delay:100},style:{classes:"koh-qtip-popover koh-carousel-popover qtip-light qtip-shadow",tip:!1}})},initOverlayHotspot=function($slide,$button,$content,tooltipID){$(window).width()<mobileScreenWidth?null!==$button.data("qtip")&&$button.qtip("destroy",!0):$button.qtip({id:tooltipID,content:{text:$content.clone()},position:{my:"right top",at:"left top",container:$slide,viewport:!0,adjust:{method:"flip shift"}},hide:{when:{event:"mouseout unfocus"},fixed:!0,delay:100},style:{classes:"koh-qtip-popover koh-carousel-popover qtip-light qtip-shadow",tip:{mimic:"center",offset:50,width:30,height:15}}})},initAsModal=function($button,$panel,remodalID){$panel.data("remodal-id",remodalID),$panel.prepend('<button data-remodal-action="close" class="remodal-close"></button>'),$panel.attr("data-koh-component","c-koh-banner-carousel"),$panel.addClass("c-koh-banner-carousel-modal");var $remodalPanel=$panel.remodal({hashTracking:!0,closeOnCancel:!0,closeOnEscape:!0,closeOnOutsideClick:!0,modifier:""});$button.data("remodal-target",remodalID),$button.click({target:$remodalPanel},function(e){e.preventDefault(),e.stopPropagation();var $target=e.data.target;$target.open()}),$(document).on("closed",$remodalPanel,function(e){e.target&&axKOH.utils.stopVideos(e.target)})},toggleOpen=function($target){$target.hasClass("open")?$target.removeClass("open"):$target.addClass("open")},makeVideoResponsive=function($videoElement){var aspectRatio=$videoElement.data("aspectratio"),maxWidth=$videoElement.data("maxwidth");if(!aspectRatio||!maxWidth){var width=$videoElement.width(),height=$videoElement.height();aspectRatio=height/width,$videoElement.data("aspectratio",aspectRatio),$videoElement.data("maxwidth",width),$videoElement.removeAttr("width"),$videoElement.removeAttr("height")}},resizeResponsiveVideo=function($videoElement){var embedTags="iframe, object, embed",aspectRatio=$videoElement.data("aspectratio"),maxWidth=$videoElement.data("maxwidth");aspectRatio&&maxWidth||(makeVideoResponsive($videoElement),aspectRatio=$videoElement.data("aspectratio"),maxWidth=$videoElement.data("maxwidth"));var $parent=$videoElement.closest(":not("+embedTags+")"),responsiveWidth=320;$parent&&(responsiveWidth=$parent.width()),responsiveWidth=Math.min(responsiveWidth,maxWidth),$videoElement.width(responsiveWidth),$videoElement.height(responsiveWidth*aspectRatio)},timers={},waitForFinalEvent=function(callback,ms,uniqueId){uniqueId||(uniqueId="UNIQUEID"),timers[uniqueId]&&clearTimeout(timers[uniqueId]),timers[uniqueId]=setTimeout(callback,ms)};return{init:function(){initCarousel(),initShoppingGuideCarousel()}}}(),$(function(){$(document).ready(function(){axKOH.main.carouselManager.init()})});
//# sourceMappingURL=data:application/json;base64,
