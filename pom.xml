<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>com.onehippo.cms7</groupId>
		<artifactId>hippo-cms7-enterprise-release</artifactId>
		<version>15.2.0</version>
	</parent>
	<name>Kohler </name>
	<description>Kohler </description>
	<groupId>com.kohler</groupId>
	<artifactId>kohler</artifactId>
	<version>0.1.0-SNAPSHOT</version>
	<packaging>pom</packaging>
	<!-- The below project elements are emptied/overridden as otherwise their
		metadata would be inherited or merged from the parent hippo-cms7-release
		pom (or its hippo-cms7-project pom). DO NOT remove these tags but instead
		fill them in appropriately as needed, UNLESS the inherited values are valid
		for your project. -->
	<url />
	<inceptionYear />
	<organization />
	<licenses>
		<license />
	</licenses>
	<mailingLists>
		<mailingList />
	</mailingLists>
	<developers>
		<developer />
	</developers>
	<contributors>
		<contributor />
	</contributors>
	<issueManagement />
	<!-- <scm> <connection/> <developerConnection/> <url/> </scm> -->
	<ciManagement />
	<distributionManagement>
		<repository>
			<id>-</id>
			<url>-</url>
		</repository>
		<snapshotRepository>
			<id>-</id>
			<url>-</url>
		</snapshotRepository>
	</distributionManagement>
	<!-- End of emptied/overridden metadata from parent hippo-cms7-release pom. -->
	<properties>
		<!--***START temporary override of versions*** -->
		<!-- ***END temporary override of versions*** -->
		<essentials.version>15.2.0</essentials.version>
		<jsp-api.version>2.2</jsp-api.version>
		<taglibs.version>1.2.5</taglibs.version>
		<xalan.version>2.7.1</xalan.version>
		<junit.version>4.10</junit.version>
		<easymock.version>3.1</easymock.version>
		<h2.database.version>1.4.199</h2.database.version>
		<development-module-deploy-dir>shared/lib</development-module-deploy-dir>
		<hippo.cms.locales>nl,de,fr,es,zh</hippo.cms.locales>
		<buildNumber>${maven.build.timestamp}</buildNumber>
	</properties>
	<repositories>
		<repository>
			<id>hippo-maven2-enterprise</id>
			<name>Hippo Enterprise Maven 2</name>
			<url>https://maven.onehippo.com/maven2-enterprise</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
			<releases>
				<updatePolicy>never</updatePolicy>
				<checksumPolicy>fail</checksumPolicy>
			</releases>
			<layout>default</layout>
		</repository>
		<repository>
			<id>hippo-forge</id>
			<name>Hippo Forge maven 2 repository.</name>
			<url>https://maven.onehippo.com/maven2-forge/</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
			<releases>
				<updatePolicy>never</updatePolicy>
			</releases>
			<layout>default</layout>
		</repository>
	</repositories>
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.onehippo.cms7</groupId>
				<artifactId>hippo-essentials-plugin-sdk-api</artifactId>
				<version>${essentials.version}</version>
			</dependency>
			<dependency>
				<groupId>javax.servlet.jsp</groupId>
				<artifactId>jsp-api</artifactId>
				<version>${jsp-api.version}</version>
				<scope>provided</scope>
			</dependency>
			<!-- other predefined runtime scope versioned dependencies -->
			<dependency>
				<groupId>org.apache.taglibs</groupId>
				<artifactId>taglibs-standard-spec</artifactId>
				<version>${taglibs.version}</version>
				<scope>runtime</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.taglibs</groupId>
				<artifactId>taglibs-standard-impl</artifactId>
				<version>${taglibs.version}</version>
				<scope>runtime</scope>
			</dependency>
			<dependency>
				<groupId>xalan</groupId>
				<artifactId>xalan</artifactId>
				<version>${xalan.version}</version>
				<scope>runtime</scope>
			</dependency>
			<dependency>
				<groupId>xalan</groupId>
				<artifactId>serializer</artifactId>
				<version>${xalan.version}</version>
				<scope>runtime</scope>
			</dependency>
			<!-- other predefined compile scope versioned dependencies -->
			<dependency>
				<groupId>org.freemarker</groupId>
				<artifactId>freemarker</artifactId>
				<version>${freemarker.version}</version>
			</dependency>
			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>${junit.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.easymock</groupId>
				<artifactId>easymock</artifactId>
				<version>${easymock.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.glassfish</groupId>
				<artifactId>javax.json</artifactId>
				<version>1.1.4</version>
			</dependency>
			<dependency>
				<groupId>com.h2database</groupId>
				<artifactId>h2</artifactId>
				<version>${h2.database.version}</version>
				<scope>runtime</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>
	<dependencies>
		<dependency>
			<groupId>com.mysql</groupId>
			<artifactId>mysql-connector-j</artifactId>
			<version>8.0.31</version>
			<scope>provided</scope>
		</dependency>
	</dependencies>
	<build>
		<defaultGoal>package</defaultGoal>
		<pluginManagement>
			<plugins>
				<!-- This plugin configuration is used to store Eclipse m2e settings
					only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.codehaus.mojo</groupId>
										<artifactId>build-helper-maven-plugin</artifactId>
										<goals>
											<goal>regex-property</goal>
										</goals>
										<versionRange>[0.0,)</versionRange>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>buildnumber-maven-plugin</artifactId>
				<executions>
					<execution>
						<phase>validate</phase>
						<goals>
							<goal>create</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<doCheck>false</doCheck>
					<doUpdate>false</doUpdate>
					<revisionOnScmFailure>-1</revisionOnScmFailure>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>sonar-maven-plugin</artifactId>
				<version>2.4</version>
			</plugin>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.7.9</version>
				<executions>
					<execution>
						<id>default-prepare-agent</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					<execution>
						<id>default-report</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>report</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<configuration>
					<archive>
						<manifest>
							<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
						</manifest>
						<manifestEntries>
							<Implementation-Build>${buildNumber}</Implementation-Build>
						</manifestEntries>
					</archive>
				</configuration>
			</plugin>
			<!-- Plugin for Deployment -->
			<plugin>
				<groupId>org.codehaus.groovy.maven</groupId>
				<artifactId>gmaven-plugin</artifactId>
				<version>1.0</version>
				<executions>
					<execution>
						<phase>validate</phase>
						<goals>
							<goal>execute</goal>
						</goals>
						<configuration>
							<source>
							import java.text.MessageFormat
							version= "${project.version}"
							def vartimestamp = MessageFormat.format("{0,date,yyyyMMddHHmmss}", new
							Date())
							reloadOnStartupVersion = version.replace("SNAPSHOT",vartimestamp)
							project.properties.setProperty('reloadonstartup.version',
							reloadOnStartupVersion)
						</source>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!-- Plugin for Deployment -->
		</plugins>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
				<includes>
					<include>**/hippoecm-extension.xml</include>
				</includes>
			</resource>
			<resource>
				<directory>src/main/resources</directory>
				<excludes>
					<exclude>**/hippoecm-extension.xml</exclude>
				</excludes>
			</resource>
		</resources>
	</build>
	<profiles>
		<profile>
			<id>default</id>
			<activation>
				<activeByDefault>true</activeByDefault>
				<property>
					<name>jrebel</name>
				</property>
			</activation>
			<modules>
				<module>cms-dependencies</module>
				<module>repository-data</module>
				<module>cms</module>
				<module>site</module>
				<module>essentials</module>
				<module>kohler-commons</module>
				<module>kohler-frontend</module>
			</modules>
		</profile>
		<profile>
			<id>docker.build</id>
			<dependencies>
				<dependency>
					<groupId>${project.groupId}</groupId>
					<artifactId>${project.artifactId}-cms</artifactId>
					<version>${project.version}</version>
					<type>war</type>
					<scope>provided</scope>
				</dependency>
				<dependency>
					<groupId>${project.groupId}</groupId>
					<artifactId>${project.artifactId}-webapp</artifactId>
					<version>${project.version}</version>
					<type>war</type>
					<scope>provided</scope>
				</dependency>
			</dependencies>
		</profile>
		<profile>
			<id>docker.run</id>
			<dependencies>
				<dependency>
					<groupId>${project.groupId}</groupId>
					<artifactId>${project.artifactId}-essentials</artifactId>
					<version>${project.version}</version>
					<type>war</type>
					<scope>provided</scope>
				</dependency>
				<dependency>
					<groupId>${project.groupId}</groupId>
					<artifactId>${project.artifactId}-repository-data-development</artifactId>
					<version>${project.version}</version>
					<scope>provided</scope>
				</dependency>
				<dependency>
					<groupId>${project.groupId}</groupId>
					<artifactId>${project.artifactId}-repository-data-site-development</artifactId>
					<version>${project.version}</version>
					<scope>provided</scope>
				</dependency>
			</dependencies>
		</profile>
		<profile>
			<id>mysql</id>
		</profile>
		<profile>
			<id>docker.mysql</id>
			<properties>
				<docker.db.bind.1>${project.basedir}/target/mysql-data:/var/lib/mysql</docker.db.bind.1>
				<docker.db.bind.2>${project.basedir}/db-bootstrap:/docker-entrypoint-initdb.d</docker.db.bind.2>
				<docker.brxm.envRun.MYSQL_DB_HOST>${docker.container.db.net.kohler-network.ip}</docker.brxm.envRun.MYSQL_DB_HOST>
			</properties>
		</profile>
		<profile>
			<id>postgres</id>
		</profile>
		<profile>
			<id>docker.postgres</id>
			<properties>
				<docker.db.bind.1>${project.basedir}/target/postgres-data:/var/lib/postgresql/data</docker.db.bind.1>
				<docker.db.bind.2>${project.basedir}/db-bootstrap:/docker-entrypoint-initdb.d</docker.db.bind.2>
				<docker.brxm.envRun.POSTGRES_DB_HOST>${docker.container.db.net.kohler-network.ip}</docker.brxm.envRun.POSTGRES_DB_HOST>
			</properties>
		</profile>
		<profile>
			<id>cargo.run</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.cargo</groupId>
						<artifactId>cargo-maven2-plugin</artifactId>
						<configuration>
							<configuration>
								<properties>
									<cargo.jvmargs>-agentlib:jdwp=transport=dt_socket,address=8000,server=y,suspend=n -Xmx4096m</cargo.jvmargs>
								</properties>
								<configfiles>
									<configfile>
										<file>${project.basedir}/conf/context.xml</file>
										<todir>conf/</todir>
										<tofile>context.xml</tofile>
									</configfile>
									<configfile>
										<file>${project.basedir}/conf/catalina-logging.properties</file>
										<todir>conf/</todir>
										<tofile>logging.properties</tofile>
									</configfile>
								</configfiles>
								<files>
									<file>
										<file>${project.basedir}/repository-data/development/target/kohler-repository-data-development-${project.version}.jar</file>
										<todir>${development-module-deploy-dir}</todir>
									</file>
									<file>
										<file>${project.basedir}/repository-data/site-development/target/kohler-repository-data-site-development-${project.version}.jar</file>
										<todir>${development-module-deploy-dir}</todir>
									</file>
								</files>
							</configuration>
							<deployables>
								<deployable>
									<type>war</type>
									<properties>
										<context>/cms</context>
									</properties>
									<location>${project.basedir}/cms/target/cms.war</location>
								</deployable>
								<deployable>
									<location>${project.basedir}/site/webapp/target/site.war</location>
									<type>war</type>
									<properties>
										<context>/site</context>
									</properties>
								</deployable>
								<deployable>
									<location>${project.basedir}/essentials/target/essentials.war</location>
									<type>war</type>
									<properties>
										<context>/essentials</context>
									</properties>
								</deployable>
							</deployables>
							<container>
								<timeout>0</timeout>
								<systemProperties>
									<log4j.configurationFile>${project.basedir}/conf/log4j2-dev.xml</log4j.configurationFile>
									<!-- enables auto export and web files watch: -->
									<project.basedir>${project.basedir}</project.basedir>
									<send.usage.statistics.to.hippo>true</send.usage.statistics.to.hippo>
									<!-- For using MySQL database locally -->
									<!-- <repo.config>file:${project.basedir}/conf/repository.xml</repo.config> -->
									<dynamic.bean.generation>false</dynamic.bean.generation>
								</systemProperties>
								<dependencies>
									<dependency>
										<groupId>com.mysql</groupId>
										<artifactId>mysql-connector-j</artifactId>
										<classpath>extra</classpath>
									</dependency>
								</dependencies>
							</container>
						</configuration>
					</plugin>
				</plugins>
			</build>
			<dependencies>
				<dependency>
					<groupId>jakarta.xml.bind</groupId>
					<artifactId>jakarta.xml.bind-api</artifactId>
					<scope>compile</scope>
				</dependency>
				<dependency>
					<groupId>jakarta.xml.ws</groupId>
					<artifactId>jakarta.xml.ws-api</artifactId>
					<scope>compile</scope>
				</dependency>
				<dependency>
					<groupId>javax.annotation</groupId>
					<artifactId>javax.annotation-api</artifactId>
					<scope>compile</scope>
				</dependency>
				<dependency>
					<groupId>jakarta.activation</groupId>
					<artifactId>jakarta.activation-api</artifactId>
					<scope>runtime</scope>
				</dependency>
				<dependency>
					<groupId>org.glassfish.jaxb</groupId>
					<artifactId>jaxb-runtime</artifactId>
					<scope>runtime</scope>
				</dependency>
			</dependencies>
		</profile>
		<profile>
			<!-- additional profile to combine with cargo:run to *not* bootstrap the development module:
				$ mvn -P cargo.run,without-development-data -->
			<id>without-development-data</id>
			<properties>
				<development-module-deploy-dir>temp</development-module-deploy-dir>
				<!-- Comment out Dockerfile instruction that copies development modules to an image -->
				<docker.brxm.copy.dev.libs.cmd>#</docker.brxm.copy.dev.libs.cmd>
			</properties>
		</profile>
		<profile>
			<id>dist</id>
			<dependencies>
				<dependency>
					<groupId>org.apache.logging.log4j</groupId>
					<artifactId>log4j-slf4j-impl</artifactId>
					<scope>provided</scope>
				</dependency>
				<dependency>
					<groupId>org.slf4j</groupId>
					<artifactId>jcl-over-slf4j</artifactId>
					<scope>provided</scope>
				</dependency>
				<dependency>
					<groupId>org.apache.logging.log4j</groupId>
					<artifactId>log4j-api</artifactId>
					<scope>provided</scope>
				</dependency>
				<dependency>
					<groupId>org.apache.logging.log4j</groupId>
					<artifactId>log4j-core</artifactId>
					<scope>provided</scope>
				</dependency>
				<dependency>
					<groupId>jakarta.xml.bind</groupId>
					<artifactId>jakarta.xml.bind-api</artifactId>
					<scope>provided</scope>
				</dependency>
				<dependency>
					<groupId>jakarta.xml.ws</groupId>
					<artifactId>jakarta.xml.ws-api</artifactId>
					<scope>provided</scope>
				</dependency>
				<dependency>
					<groupId>javax.annotation</groupId>
					<artifactId>javax.annotation-api</artifactId>
					<scope>provided</scope>
				</dependency>
				<dependency>
					<groupId>jakarta.activation</groupId>
					<artifactId>jakarta.activation-api</artifactId>
					<scope>provided</scope>
				</dependency>
				<dependency>
					<groupId>org.glassfish.jaxb</groupId>
					<artifactId>jaxb-runtime</artifactId>
					<scope>provided</scope>
				</dependency>
			</dependencies>
			<build>
				<defaultGoal>validate</defaultGoal>
				<plugins>
					<plugin>
						<artifactId>maven-assembly-plugin</artifactId>
						<executions>
							<execution>
								<id>distro-assembly</id>
								<phase>validate</phase>
								<goals>
									<goal>single</goal>
								</goals>
								<configuration>
									<descriptors>
										<descriptor>${project.basedir}/src/main/assembly/distribution.xml</descriptor>
									</descriptors>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>dist-with-development-data</id>
			<dependencies>
				<dependency>
					<groupId>org.apache.logging.log4j</groupId>
					<artifactId>log4j-slf4j-impl</artifactId>
					<scope>provided</scope>
				</dependency>
				<dependency>
					<groupId>org.slf4j</groupId>
					<artifactId>jcl-over-slf4j</artifactId>
					<scope>provided</scope>
				</dependency>
				<dependency>
					<groupId>org.apache.logging.log4j</groupId>
					<artifactId>log4j-api</artifactId>
					<scope>provided</scope>
				</dependency>
				<dependency>
					<groupId>org.apache.logging.log4j</groupId>
					<artifactId>log4j-core</artifactId>
					<scope>provided</scope>
				</dependency>
			</dependencies>
			<build>
				<defaultGoal>validate</defaultGoal>
				<plugins>
					<plugin>
						<artifactId>maven-assembly-plugin</artifactId>
						<executions>
							<execution>
								<id>distro-assembly-with-development-data</id>
								<phase>validate</phase>
								<goals>
									<goal>single</goal>
								</goals>
								<configuration>
									<descriptors>
										<descriptor>${project.basedir}/src/main/assembly/distribution-with-development-data.xml</descriptor>
									</descriptors>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>